name: Build and Deploy Health Dashboard

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js 18
      uses: actions/setup-node@v4
      with:
        node-js-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      continue-on-error: true
      
    - name: Run tests
      run: npm test -- --coverage --watchAll=false
      continue-on-error: true
      
    - name: Build React application
      run: npm run build

    - name: Test Docker build (non-main branches)
      if: github.ref != 'refs/heads/main'
      run: docker build -t health-dashboard:test .

    - name: Set up Docker Buildx
      if: github.ref == 'refs/heads/main'
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry
      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      if: github.ref == 'refs/heads/main'
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push Docker image
      if: github.ref == 'refs/heads/main'
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Deploy notification
      if: github.ref == 'refs/heads/main'
      run: |
        echo "✅ Build completed successfully!"
        echo "🚀 ArgoCD will automatically sync the deployment"
        echo "📦 Image: ghcr.io/${{ github.repository }}:latest"
        echo "🌐 URL: https://dashboard.home"
        echo ""
        echo "🔄 To deploy manually on your K3s cluster:"
        echo "kubectl set image deployment/health-dashboard health-dashboard=ghcr.io/${{ github.repository }}:latest -n goal-app"
        echo ""
        echo "🚀 Or use the automated deployment script:"
        echo "cd kubernetes && ./deploy.sh"
