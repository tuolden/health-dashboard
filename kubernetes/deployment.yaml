apiVersion: apps/v1
kind: Deployment
metadata:
  name: health-dashboard
  namespace: goal-app
  labels:
    app: health-dashboard
    version: v1
  annotations:
    argocd.argoproj.io/sync-wave: "1"
    deployment.kubernetes.io/revision: "v-2025-06-25-18-16-f4141b74"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: health-dashboard
  template:
    metadata:
      labels:
        app: health-dashboard
        version: v1
      annotations:
        argocd.argoproj.io/tracking-id: "health-dashboard:apps/Deployment:goal-app/health-dashboard"
        deployment.kubernetes.io/revision: "v-2025-06-25-18-16-f4141b74"
        kubectl.kubernetes.io/restartedAt: "2025-06-25T18:16:30Z"
    spec:
      containers:
      - name: health-dashboard
        image: black:32003/health-dashboard:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 5301
          name: http
          protocol: TCP
        env:
        - name: APP_ENV
          valueFrom:
            configMapKeyRef:
              name: health-dashboard-config
              key: APP_ENV
        - name: VITE_GRAPHQL_URL
          valueFrom:
            configMapKeyRef:
              name: health-dashboard-config
              key: VITE_GRAPHQL_URL
        - name: VITE_GRAPHQL_WS_URL
          valueFrom:
            configMapKeyRef:
              name: health-dashboard-config
              key: VITE_GRAPHQL_WS_URL
        - name: FORCE_REDEPLOY
          valueFrom:
            configMapKeyRef:
              name: health-dashboard-config
              key: DEPLOYMENT_VERSION
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /
            port: 5301
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 5301
          initialDelaySeconds: 5
          periodSeconds: 5
      restartPolicy: Always
